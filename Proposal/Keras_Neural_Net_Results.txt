models = [
        ("KerasNN_3l_6n_oa_iu_lm_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="adam",init="uniform",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_6l_6n_oa_iu_lm_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="adam",init="uniform",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_3l_12n_oa_iu_lm_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="adam",init="uniform",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_6l_12n_oa_iu_lm_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="adam",init="uniform",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_3l_6n_or_iu_lm_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="rmsprop",init="uniform",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_6l_6n_or_iu_lm_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="rmsprop",init="uniform",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_3l_12n_or_iu_lm_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="rmsprop",init="uniform",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_6l_12n_or_iu_lm_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="rmsprop",init="uniform",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_3l_6n_oa_ih_lm_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="adam",init="he_normal",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_6l_6n_oa_ih_lm_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="adam",init="he_normal",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_3l_12n_oa_ih_lm_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="adam",init="he_normal",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_6l_12n_oa_ih_lm_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="adam",init="he_normal",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_3l_6n_or_ih_lm_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="rmsprop",init="he_normal",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_6l_6n_or_ih_lm_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="rmsprop",init="he_normal",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_3l_12n_or_ih_lm_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="rmsprop",init="he_normal",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_6l_12n_or_ih_lm_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="rmsprop",init="he_normal",loss="mean_squared_error",r_dropout=0.2)"),
    ("KerasNN_3l_6n_oa_iu_lb_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="adam",init="uniform",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_6l_6n_oa_iu_lb_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="adam",init="uniform",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_3l_12n_oa_iu_lb_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="adam",init="uniform",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_6l_12n_oa_iu_lb_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="adam",init="uniform",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_3l_6n_or_iu_lb_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="rmsprop",init="uniform",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_6l_6n_or_iu_lb_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="rmsprop",init="uniform",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_3l_12n_or_iu_lb_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="rmsprop",init="uniform",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_6l_12n_or_iu_lb_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="rmsprop",init="uniform",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_3l_6n_oa_ih_lb_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="adam",init="he_normal",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_6l_6n_oa_ih_lb_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="adam",init="he_normal",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_3l_12n_oa_ih_lb_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="adam",init="he_normal",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_6l_12n_oa_ih_lb_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="adam",init="he_normal",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_3l_6n_or_ih_lb_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="rmsprop",init="he_normal",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_6l_6n_or_ih_lb_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="rmsprop",init="he_normal",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_3l_12n_or_ih_lb_d2" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="rmsprop",init="he_normal",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_6l_12n_or_ih_lb_d2" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="rmsprop",init="he_normal",loss="binary_crossentropy",r_dropout=0.2)"),
    ("KerasNN_3l_6n_oa_iu_lm_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="adam",init="uniform",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_6l_6n_oa_iu_lm_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="adam",init="uniform",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_3l_12n_oa_iu_lm_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="adam",init="uniform",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_6l_12n_oa_iu_lm_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="adam",init="uniform",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_3l_6n_or_iu_lm_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="rmsprop",init="uniform",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_6l_6n_or_iu_lm_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="rmsprop",init="uniform",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_3l_12n_or_iu_lm_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="rmsprop",init="uniform",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_6l_12n_or_iu_lm_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="rmsprop",init="uniform",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_3l_6n_oa_ih_lm_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="adam",init="he_normal",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_6l_6n_oa_ih_lm_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="adam",init="he_normal",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_3l_12n_oa_ih_lm_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="adam",init="he_normal",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_6l_12n_oa_ih_lm_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="adam",init="he_normal",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_3l_6n_or_ih_lm_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="rmsprop",init="he_normal",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_6l_6n_or_ih_lm_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="rmsprop",init="he_normal",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_3l_12n_or_ih_lm_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="rmsprop",init="he_normal",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_6l_12n_or_ih_lm_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="rmsprop",init="he_normal",loss="mean_squared_error",r_dropout=0.4)"),
    ("KerasNN_3l_6n_oa_iu_lb_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="adam",init="uniform",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_6l_6n_oa_iu_lb_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="adam",init="uniform",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_3l_12n_oa_iu_lb_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="adam",init="uniform",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_6l_12n_oa_iu_lb_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="adam",init="uniform",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_3l_6n_or_iu_lb_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="rmsprop",init="uniform",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_6l_6n_or_iu_lb_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="rmsprop",init="uniform",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_3l_12n_or_iu_lb_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="rmsprop",init="uniform",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_6l_12n_or_iu_lb_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="rmsprop",init="uniform",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_3l_6n_oa_ih_lb_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="adam",init="he_normal",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_6l_6n_oa_ih_lb_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="adam",init="he_normal",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_3l_12n_oa_ih_lb_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="adam",init="he_normal",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_6l_12n_oa_ih_lb_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="adam",init="he_normal",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_3l_6n_or_ih_lb_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=6, optimizer="rmsprop",init="he_normal",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_6l_6n_or_ih_lb_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=6, optimizer="rmsprop",init="he_normal",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_3l_12n_or_ih_lb_d4" , "KerasNN_not_fitted(n_layers=3, n_neurons=12, optimizer="rmsprop",init="he_normal",loss="binary_crossentropy",r_dropout=0.4)"),
    ("KerasNN_6l_12n_or_ih_lb_d4" , "KerasNN_not_fitted(n_layers=6, n_neurons=12, optimizer="rmsprop",init="he_normal",loss="binary_crossentropy",r_dropout=0.4)")
]
